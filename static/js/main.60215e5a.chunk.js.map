{"version":3,"sources":["DollMaker/ArrayMethods.ts","DollMaker/Dolls/01_bd1_cabeza.png","DollMaker/Dolls/01_bd2_cabeza.png","DollMaker/Dolls/02_bd1_torso.png","DollMaker/Dolls/02_bd2_torso.png","DollMaker/Dolls/03_bd1_brazoizq.png","DollMaker/Dolls/03_bd2_brazoizq.png","DollMaker/Dolls/04_bd1_brazoder.png","DollMaker/Dolls/04_bd2_brazoder.png","DollMaker/Dolls/05_bd1_piernaizq.png","DollMaker/Dolls/05_bd2_piernaizq.png","DollMaker/Dolls/06_bd1_piernader.png","DollMaker/Dolls/06_bd2_piernader.png","DollMaker/DollMaker.tsx","reportWebVitals.ts","StoryMaker/StoryMaker.tsx","index.tsx"],"names":["formCombination","odometer","arrayOfArrays","reduce","accumulator","odometer_value","odometer_index","odometerIncrement","i_odometer_digit","length","maxee","allBrokenParts","bd1_cabeza","bd2_cabeza","bd1_torso","bd2_torso","bd1_brazoizq","bd2_brazoizq","bd1_brazoder","bd2_brazoder","bd1_piernaizq","bd2_piernaizq","bd1_piernader","bd2_piernader","DollMaker","useState","head","setHead","leftSide","setLeftSide","rightSide","setRightSide","rightLeg","setRightLeg","getBodyPart","bodyPart","options","hidden","forEach","part","push","value","makeImageName","bd","getImage","imageName","console","log","filter","brokenPart","includes","className","htmlFor","src","alt","name","id","onChange","e","target","dollData","cabeza","torso_brazoizq","brazoder_piernaizq","piernader","rows","allCombinations","Array","isArray","i","fill","output","newCombination","combineArrays","slice","map","combination","index","comboArray","split","pop","torso","leftArm","rightArm","leftLeg","makeRows","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","gauntletData","creatures","gauntlets","concat","deity","planes","tribes","StoryMaker","rarity","setRarity","element","setElement","attack","setAttack","makeName","start","namingData","_rarity","middle","_element","content","end","_attack","charAt","toUpperCase","getFirstLetter","word","makeID","makeStoryCell","storyData","getRarities","getAttacks","getElements","gauntlet","ReactDOM","render","StrictMode","to","exact","path","document","getElementById"],"mappings":"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","file":"static/js/main.60215e5a.chunk.js","sourcesContent":["//https://stackoverflow.com/questions/8936610/how-can-i-create-every-combination-possible-for-the-contents-of-two-arrays\r\n\r\nexport function combineArrays( arrayOfArrays: any[][] ): any[] {\r\n\r\n  // First, handle some degenerate cases...\r\n\r\n  if( ! arrayOfArrays ){\r\n      // Or maybe we should toss an exception...?\r\n      return [];\r\n  }\r\n\r\n  if( ! Array.isArray( arrayOfArrays ) ){\r\n      // Or maybe we should toss an exception...?\r\n      return [];\r\n  }\r\n\r\n  if( arrayOfArrays.length == 0 ){\r\n      return [];\r\n  }\r\n\r\n  for( let i = 0 ; i < arrayOfArrays.length; i++ ){\r\n      if( ! Array.isArray(arrayOfArrays[i]) || arrayOfArrays[i].length == 0 ){\r\n          // If any of the arrays in arrayOfArrays are not arrays or zero-length, return an empty array...\r\n          return [];\r\n      }\r\n  }\r\n\r\n  // Done with degenerate cases...\r\n\r\n  // Start \"odometer\" with a 0 for each array in array_of_arrays.\r\n  let odometer = new Array( arrayOfArrays.length );\r\n  odometer.fill( 0 ); \r\n\r\n  let output = [];\r\n\r\n  let newCombination = formCombination( odometer, arrayOfArrays );\r\n\r\n  output.push( newCombination );\r\n\r\n  while ( odometerIncrement( odometer, arrayOfArrays ) ){\r\n      newCombination = formCombination( odometer, arrayOfArrays );\r\n      output.push( newCombination );\r\n  }\r\n\r\n  return output;\r\n}/* combineArrays() */\r\n\r\n\r\n// Translate \"odometer\" to combinations from array_of_arrays\r\nexport function formCombination( odometer: any[], arrayOfArrays: any[][] ):any[]{\r\n  // In Imperative Programmingese (i.e., English):\r\n  // let s_output = \"\";\r\n  // for( let i=0; i < odometer.length; i++ ){\r\n  //    s_output += \"\" + array_of_arrays[i][odometer[i]]; \r\n  // }\r\n  // return s_output;\r\n\r\n  // In Functional Programmingese (Henny Youngman one-liner):\r\n  return odometer.reduce(\r\n    function(accumulator, odometer_value, odometer_index){\r\n      return \"\" + accumulator + arrayOfArrays[odometer_index][odometer_value] + ',';\r\n    },\r\n    \"\"\r\n  );\r\n}/* formCombination() */\r\n\r\nexport function odometerIncrement( odometer: any[], arrayOfArrays: any[][] ){\r\n\r\n  // Basically, work you way from the rightmost digit of the \"odometer\"...\r\n  // if you're able to increment without cycling that digit back to zero,\r\n  // you're all done, otherwise, cycle that digit to zero and go one digit to the\r\n  // left, and begin again until you're able to increment a digit\r\n  // without cycling it...simple, huh...?\r\n\r\n  for( let i_odometer_digit = odometer.length-1; i_odometer_digit >=0; i_odometer_digit-- ){ \r\n\r\n      let maxee = arrayOfArrays[i_odometer_digit].length - 1;         \r\n\r\n      if( odometer[i_odometer_digit] + 1 <= maxee ){\r\n          // increment, and you're done...\r\n          odometer[i_odometer_digit]++;\r\n          return true;\r\n      }\r\n      else{\r\n          if( i_odometer_digit - 1 < 0 ){\r\n              // No more digits left to increment, end of the line...\r\n              return false;\r\n          }\r\n          else{\r\n              // Can't increment this digit, cycle it to zero and continue\r\n              // the loop to go over to the next digit...\r\n              odometer[i_odometer_digit]=0;\r\n              continue;\r\n          }\r\n      }\r\n  }/* for( let odometer_digit = odometer.length-1; odometer_digit >=0; odometer_digit-- ) */\r\n\r\n}/* odometerIncrement() */\r\n","export default __webpack_public_path__ + \"static/media/01_bd1_cabeza.05ee5799.png\";","export default __webpack_public_path__ + \"static/media/01_bd2_cabeza.2cb78d34.png\";","export default __webpack_public_path__ + \"static/media/02_bd1_torso.a9b291b2.png\";","export default __webpack_public_path__ + \"static/media/02_bd2_torso.ae2677e8.png\";","export default __webpack_public_path__ + \"static/media/03_bd1_brazoizq.56a6b361.png\";","export default __webpack_public_path__ + \"static/media/03_bd2_brazoizq.09e7e487.png\";","export default __webpack_public_path__ + \"static/media/04_bd1_brazoder.05fc7081.png\";","export default __webpack_public_path__ + \"static/media/04_bd2_brazoder.ff19ddcd.png\";","export default __webpack_public_path__ + \"static/media/05_bd1_piernaizq.1d9043aa.png\";","export default __webpack_public_path__ + \"static/media/05_bd2_piernaizq.20c9decc.png\";","export default __webpack_public_path__ + \"static/media/06_bd1_piernader.e867a43d.png\";","export default __webpack_public_path__ + \"static/media/06_bd2_piernader.c9285258.png\";","import React, { useState } from \"react\";\r\nimport { combineArrays } from \"./ArrayMethods\";\r\nimport dollData from \"./DollDataLight.json\";\r\n//Broken dolls:\r\nimport bd1_cabeza from \"./Dolls/01_bd1_cabeza.png\";\r\nimport bd2_cabeza from \"./Dolls/01_bd2_cabeza.png\";\r\nimport bd1_torso from \"./Dolls/02_bd1_torso.png\";\r\nimport bd2_torso from \"./Dolls/02_bd2_torso.png\";\r\nimport bd1_brazoizq from \"./Dolls/03_bd1_brazoizq.png\";\r\nimport bd2_brazoizq from \"./Dolls/03_bd2_brazoizq.png\";\r\nimport bd1_brazoder from \"./Dolls/04_bd1_brazoder.png\";\r\nimport bd2_brazoder from \"./Dolls/04_bd2_brazoder.png\";\r\nimport bd1_piernaizq from \"./Dolls/05_bd1_piernaizq.png\";\r\nimport bd2_piernaizq from \"./Dolls/05_bd2_piernaizq.png\";\r\nimport bd1_piernader from \"./Dolls/06_bd1_piernader.png\";\r\nimport bd2_piernader from \"./Dolls/06_bd2_piernader.png\";\r\n\r\nconst allBrokenParts = [\r\n  bd1_cabeza,\r\n  bd2_cabeza,\r\n  bd1_torso,\r\n  bd2_torso,\r\n  bd1_brazoizq,\r\n  bd2_brazoizq,\r\n  bd1_brazoder,\r\n  bd2_brazoder,\r\n  bd1_piernaizq,\r\n  bd2_piernaizq,\r\n  bd1_piernader,\r\n  bd2_piernader,\r\n];\r\n\r\nconst DollMaker = () => {\r\n  const [head, setHead] = useState<string>(\"bd1\");\r\n  const [leftSide, setLeftSide] = useState<string>(\"bd1\");\r\n  const [rightSide, setRightSide] = useState<string>(\"bd1\");\r\n  const [rightLeg, setRightLeg] = useState<string>(\"bd1\");\r\n\r\n  const getBodyPart = (bodyPart: string[]) => {\r\n    const options: JSX.Element[] = [<option hidden>select</option>];\r\n    bodyPart.forEach((part) => {\r\n      options.push(<option value={part}>{part}</option>);\r\n    });\r\n    return options;\r\n  };\r\n\r\n  const makeBody = () => {\r\n    return `${head} ${leftSide} ${rightSide} ${rightLeg}`;\r\n  };\r\n\r\n  const makeImageName = (bd: string, part: string) => {\r\n    return `${bd}_${part}`;\r\n  };\r\n\r\n  const getImage = (imageName: string) => {\r\n    console.log(allBrokenParts);\r\n    return allBrokenParts.filter((brokenPart) =>\r\n      brokenPart.includes(imageName)\r\n    )[0];\r\n  };\r\n\r\n  const makeRows = () => {\r\n    const arrayOfArrays = [\r\n      dollData.cabeza,\r\n      dollData.torso_brazoizq,\r\n      dollData.brazoder_piernaizq,\r\n      dollData.piernader,\r\n    ];\r\n    const allCombinations = combineArrays(arrayOfArrays);\r\n    console.log(\"All combinations: \", allCombinations.length);\r\n    const onlySomeArrays = allCombinations.slice(10);\r\n\r\n    return allCombinations.map((combination, index) => {\r\n      const comboArray = combination.split(\",\");\r\n      comboArray.pop();\r\n      const head = makeImageName(comboArray[0], \"cabeza\");\r\n      const torso = makeImageName(comboArray[1], \"torso\");\r\n      const leftArm = makeImageName(comboArray[1], \"brazoizq\");\r\n      const rightArm = makeImageName(comboArray[2], \"brazoder\");\r\n      const leftLeg = makeImageName(comboArray[2], \"piernaizq\");\r\n      const rightLeg = makeImageName(comboArray[3], \"piernader\");\r\n      return (\r\n        <tr>\r\n          <td>{index + 1}</td>\r\n          <td>fallen-angel-{index + 1}</td>\r\n          <td className=\"image-cell\">\r\n            <div className=\"image-container\">\r\n              <img\r\n                className=\"base torso\"\r\n                src={getImage(torso)}\r\n                alt={`embla-${index}`}\r\n              />\r\n              <img\r\n                className=\"part head\"\r\n                src={getImage(head)}\r\n                alt={`embla-${index}`}\r\n              />\r\n              <img\r\n                className=\"part arm\"\r\n                src={getImage(leftArm)}\r\n                alt={`embla-${index}`}\r\n              />\r\n              <img\r\n                className=\"part arm\"\r\n                src={getImage(rightArm)}\r\n                alt={`embla-${index}`}\r\n              />\r\n              <img\r\n                className=\"part leg\"\r\n                src={getImage(leftLeg)}\r\n                alt={`embla-${index}`}\r\n              />\r\n              <img\r\n                className=\"part leg\"\r\n                src={getImage(rightLeg)}\r\n                alt={`embla-${index}`}\r\n              />\r\n            </div>\r\n          </td>\r\n          <td>\r\n            <ul>\r\n              <li>head: {comboArray[0]}</li>\r\n              <li>leftSide: {comboArray[1]}</li>\r\n              <li>rightSide: {comboArray[2]}</li>\r\n              <li>rightLeg: {comboArray[3]}</li>\r\n            </ul>\r\n          </td>\r\n        </tr>\r\n      );\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"bd-maker-container\">\r\n        <div className=\"result\">\r\n          <label htmlFor=\"result\">Result</label>\r\n          <div className=\"image-container\">\r\n            <img\r\n              className=\"base torso\"\r\n              src={getImage(makeImageName(leftSide, \"torso\"))}\r\n              alt={`torso`}\r\n            />\r\n            <img\r\n              className=\"part head\"\r\n              src={getImage(makeImageName(head, \"cabeza\"))}\r\n              alt={`head`}\r\n            />\r\n            <img\r\n              className=\"part arm\"\r\n              src={getImage(makeImageName(leftSide, \"brazoizq\"))}\r\n              alt={`leftArm`}\r\n            />\r\n            <img\r\n              className=\"part arm\"\r\n              src={getImage(makeImageName(rightSide, \"brazoder\"))}\r\n              alt={`rightArm`}\r\n            />\r\n            <img\r\n              className=\"part leg\"\r\n              src={getImage(makeImageName(rightSide, \"piernaizq\"))}\r\n              alt={`leftLeg`}\r\n            />\r\n            <img\r\n              className=\"part leg\"\r\n              src={getImage(makeImageName(rightLeg, \"piernader\"))}\r\n              alt={`rightLeg`}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"setup\">\r\n          <div className=\"label-set\">\r\n            <label htmlFor=\"head\">Head</label>\r\n            <select name=\"\" id=\"head\" onChange={(e) => setHead(e.target.value)}>\r\n              {getBodyPart(dollData.cabeza)}\r\n            </select>\r\n          </div>\r\n          <div className=\"label-set\">\r\n            <label htmlFor=\"left_side\">Left Side</label>\r\n            <select\r\n              name=\"\"\r\n              id=\"left_side\"\r\n              onChange={(e) => setLeftSide(e.target.value)}\r\n            >\r\n              {getBodyPart(dollData.torso_brazoizq)}\r\n            </select>\r\n          </div>\r\n          <div className=\"label-set\">\r\n            <label htmlFor=\"right_side\">Right Side</label>\r\n            <select\r\n              name=\"\"\r\n              id=\"right_side\"\r\n              onChange={(e) => setRightSide(e.target.value)}\r\n            >\r\n              {getBodyPart(dollData.brazoder_piernaizq)}\r\n            </select>\r\n          </div>\r\n          <div className=\"label-set\">\r\n            <label htmlFor=\"right_leg\">Right Leg</label>\r\n            <select\r\n              name=\"\"\r\n              id=\"right_leg\"\r\n              onChange={(e) => setRightLeg(e.target.value)}\r\n            >\r\n              {getBodyPart(dollData.piernader)}\r\n            </select>\r\n          </div>\r\n          <textarea value={makeBody()} rows={5} />\r\n        </div>\r\n      </div>\r\n      {/* <div className=\"table-top\">\r\n        <div className=\"label-set\">\r\n          <label htmlFor=\"results\">Results</label>\r\n          <select\r\n            name=\"\"\r\n            id=\"results\"\r\n            onChange={(e) => setRightLeg(e.target.value)}\r\n          >\r\n            {getBodyPart(dollData.right_legs)}\r\n          </select>\r\n        </div>\r\n      </div> */}\r\n      <table>\r\n        <thead>\r\n          <tr>\r\n            <th>#</th>\r\n            <th>ID</th>\r\n            <th>Broken Doll</th>\r\n            <th>Parts Used</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>{makeRows()}</tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DollMaker;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React, { useState } from \"react\";\r\nimport storyData from \"./StoryData.json\";\r\nimport namingData from \"./NamingData.json\";\r\nimport creatures from \"./GauntletData/Creatures.json\";\r\nimport deity from \"./GauntletData/Deity.json\";\r\nimport planes from \"./GauntletData/Planes.json\";\r\nimport tribes from \"./GauntletData/Tribes.json\";\r\n\r\nconst gauntletData = creatures.gauntlets.concat(\r\n  deity.gauntlets,\r\n  planes.gauntlets,\r\n  tribes.gauntlets\r\n);\r\n\r\nconst StoryMaker = () => {\r\n  const [rarity, setRarity] = useState<string>(\"no rarity\");\r\n  const [element, setElement] = useState<string>(\"no element\");\r\n  const [attack, setAttack] = useState<string>(\"no attack\");\r\n\r\n  const getRarities = () => {\r\n    const options: JSX.Element[] = [<option hidden>select</option>];\r\n    storyData.rarity.forEach((rarity) => {\r\n      options.push(<option value={rarity.content}>{rarity.name}</option>);\r\n    });\r\n    return options;\r\n  };\r\n\r\n  const getElements = () => {\r\n    const options: JSX.Element[] = [<option hidden>select</option>];\r\n    storyData.element.forEach((element) => {\r\n      options.push(<option value={element.content}>{element.name}</option>);\r\n    });\r\n    return options;\r\n  };\r\n\r\n  const getAttacks = () => {\r\n    const options: JSX.Element[] = [<option hidden>select</option>];\r\n    storyData.attack.forEach((attack) => {\r\n      options.push(<option value={attack.content}>{attack.name}</option>);\r\n    });\r\n    return options;\r\n  };\r\n\r\n  const makeStory = () => {\r\n    return `${rarity} ${attack} ${element}`;\r\n  };\r\n\r\n  const capitalizeFirstLetter = (name: string) => {\r\n    return name.charAt(0).toUpperCase() + name.slice(1);\r\n  };\r\n\r\n  const makeName = (rarity: string, element: string, attack: string) => {\r\n    const start = namingData.rarity.filter(\r\n      (_rarity) => _rarity.name === rarity\r\n    )[0].name;\r\n    const middle = namingData.element.filter(\r\n      (_element) => _element.name === element\r\n    )[0].content;\r\n    const end = namingData.attack.filter(\r\n      (_attack) => _attack.name === attack\r\n    )[0].content;\r\n\r\n    return `${capitalizeFirstLetter(start)}'s ${middle} ${end}`;\r\n  };\r\n\r\n  const getFirstLetter = (word: string) => {\r\n    return word.charAt(0).toUpperCase() + word.charAt(1);\r\n  };\r\n\r\n  const makeID = (rarity: string, element: string, attack: string) => {\r\n    const start = namingData.rarity.filter(\r\n      (_rarity) => _rarity.name === rarity\r\n    )[0].name;\r\n    const middle = namingData.element.filter(\r\n      (_element) => _element.name === element\r\n    )[0].content;\r\n    const end = namingData.attack.filter(\r\n      (_attack) => _attack.name === attack\r\n    )[0].content;\r\n\r\n    return `${getFirstLetter(start)}_${getFirstLetter(middle)}_${getFirstLetter(\r\n      end\r\n    )}`;\r\n  };\r\n\r\n  const makeStoryCell = (rarity: string, element: string, attack: string) => {\r\n    const start = storyData.rarity.filter(\r\n      (_rarity) => _rarity.name === rarity\r\n    )[0].content;\r\n    const middle = storyData.attack.filter(\r\n      (_attack) => _attack.name === attack\r\n    )[0].content;\r\n    const end = storyData.element.filter(\r\n      (_element) => _element.name === element\r\n    )[0].content;\r\n\r\n    return `${start} ${middle} ${end}`;\r\n  };\r\n\r\n  const makeRows = () => {\r\n    return gauntletData.map((gauntlet, index) => {\r\n      return (\r\n        <tr>\r\n          <td>{index + 1}</td>\r\n          <td>\r\n            {makeName(gauntlet.rarity, gauntlet.element, gauntlet.attack)}\r\n          </td>\r\n          <td>{gauntlet.rarity}</td>\r\n          <td>{gauntlet.element}</td>\r\n          <td>{gauntlet.attack}</td>\r\n          <td>\r\n            {makeStoryCell(gauntlet.rarity, gauntlet.element, gauntlet.attack)}\r\n          </td>\r\n          <td>{makeID(gauntlet.rarity, gauntlet.element, gauntlet.attack)}</td>\r\n        </tr>\r\n      );\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"top\">\r\n        <div>\r\n          <label htmlFor=\"rarity\">Rarity</label>\r\n          <select\r\n            name=\"\"\r\n            id=\"rarity\"\r\n            onChange={(e) => setRarity(e.target.value)}\r\n          >\r\n            {getRarities()}\r\n          </select>\r\n        </div>\r\n        <div>\r\n          <label htmlFor=\"attack\">Attack</label>\r\n          <select\r\n            name=\"\"\r\n            id=\"attack\"\r\n            onChange={(e) => setAttack(e.target.value)}\r\n          >\r\n            {getAttacks()}\r\n          </select>\r\n        </div>\r\n        <div>\r\n          <label htmlFor=\"element\">Element</label>\r\n          <select\r\n            name=\"\"\r\n            id=\"element\"\r\n            onChange={(e) => setElement(e.target.value)}\r\n          >\r\n            {getElements()}\r\n          </select>\r\n        </div>\r\n      </div>\r\n      <div className=\"bottom\">\r\n        <label htmlFor=\"result\">Result</label>\r\n        <textarea value={makeStory()} rows={5} />\r\n      </div>\r\n\r\n      <table>\r\n        <thead>\r\n          <tr>\r\n            <th>#</th>\r\n            <th>Name</th>\r\n            <th>Rarity</th>\r\n            <th>Element</th>\r\n            <th>Attack</th>\r\n            <th>Story</th>\r\n            <th>ID</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>{makeRows()}</tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StoryMaker;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport DollMaker from \"./DollMaker/DollMaker\";\r\nimport \"./index.css\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nimport StoryMaker from \"./StoryMaker/StoryMaker\";\r\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Router>\r\n      <div className=\"container\">\r\n        <div className=\"top\">\r\n          <Link to=\"/story\">Story Maker</Link>\r\n          <Link to=\"/doll\">Doll Maker</Link>\r\n        </div>\r\n      </div>\r\n      <Route exact path=\"/story\">\r\n        <StoryMaker />\r\n      </Route>\r\n      <Route exact path=\"/doll\">\r\n        <DollMaker />\r\n      </Route>\r\n    </Router>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}