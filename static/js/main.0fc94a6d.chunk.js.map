{"version":3,"sources":["DollMaker/ArrayMethods.ts","DollMaker/DollMaker.tsx","reportWebVitals.ts","StoryMaker/StoryMaker.tsx","index.tsx"],"names":["formCombination","odometer","arrayOfArrays","reduce","accumulator","odometer_value","odometer_index","odometerIncrement","i_odometer_digit","length","maxee","DollMaker","useState","hair","setHair","face","setFace","body","setBody","leftArm","setLeftArm","rightArm","setRightArm","leftLeg","setLeftLeg","rightLeg","setRightLeg","getBodyPart","bodyPart","options","hidden","forEach","part","push","value","className","htmlFor","name","id","onChange","e","target","dollData","hairs","faces","bodies","left_arms","right_arms","left_legs","right_legs","rows","allCombinations","Array","isArray","i","fill","output","newCombination","combineArrays","console","log","slice","map","combination","index","comboArray","split","pop","makeRows","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","gauntletData","creatures","gauntlets","concat","deity","planes","tribes","StoryMaker","rarity","setRarity","element","setElement","attack","setAttack","makeName","start","namingData","filter","_rarity","middle","_element","content","end","_attack","charAt","toUpperCase","getFirstLetter","word","makeID","makeStoryCell","storyData","getRarities","getAttacks","getElements","gauntlet","ReactDOM","render","StrictMode","to","exact","path","document","getElementById"],"mappings":"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","file":"static/js/main.0fc94a6d.chunk.js","sourcesContent":["//https://stackoverflow.com/questions/8936610/how-can-i-create-every-combination-possible-for-the-contents-of-two-arrays\r\n\r\nexport function combineArrays( arrayOfArrays: any[][] ): any[] {\r\n\r\n  // First, handle some degenerate cases...\r\n\r\n  if( ! arrayOfArrays ){\r\n      // Or maybe we should toss an exception...?\r\n      return [];\r\n  }\r\n\r\n  if( ! Array.isArray( arrayOfArrays ) ){\r\n      // Or maybe we should toss an exception...?\r\n      return [];\r\n  }\r\n\r\n  if( arrayOfArrays.length == 0 ){\r\n      return [];\r\n  }\r\n\r\n  for( let i = 0 ; i < arrayOfArrays.length; i++ ){\r\n      if( ! Array.isArray(arrayOfArrays[i]) || arrayOfArrays[i].length == 0 ){\r\n          // If any of the arrays in arrayOfArrays are not arrays or zero-length, return an empty array...\r\n          return [];\r\n      }\r\n  }\r\n\r\n  // Done with degenerate cases...\r\n\r\n  // Start \"odometer\" with a 0 for each array in array_of_arrays.\r\n  let odometer = new Array( arrayOfArrays.length );\r\n  odometer.fill( 0 ); \r\n\r\n  let output = [];\r\n\r\n  let newCombination = formCombination( odometer, arrayOfArrays );\r\n\r\n  output.push( newCombination );\r\n\r\n  while ( odometerIncrement( odometer, arrayOfArrays ) ){\r\n      newCombination = formCombination( odometer, arrayOfArrays );\r\n      output.push( newCombination );\r\n  }\r\n\r\n  return output;\r\n}/* combineArrays() */\r\n\r\n\r\n// Translate \"odometer\" to combinations from array_of_arrays\r\nexport function formCombination( odometer: any[], arrayOfArrays: any[][] ):any[]{\r\n  // In Imperative Programmingese (i.e., English):\r\n  // let s_output = \"\";\r\n  // for( let i=0; i < odometer.length; i++ ){\r\n  //    s_output += \"\" + array_of_arrays[i][odometer[i]]; \r\n  // }\r\n  // return s_output;\r\n\r\n  // In Functional Programmingese (Henny Youngman one-liner):\r\n  return odometer.reduce(\r\n    function(accumulator, odometer_value, odometer_index){\r\n      return \"\" + accumulator + arrayOfArrays[odometer_index][odometer_value] + ',';\r\n    },\r\n    \"\"\r\n  );\r\n}/* formCombination() */\r\n\r\nexport function odometerIncrement( odometer: any[], arrayOfArrays: any[][] ){\r\n\r\n  // Basically, work you way from the rightmost digit of the \"odometer\"...\r\n  // if you're able to increment without cycling that digit back to zero,\r\n  // you're all done, otherwise, cycle that digit to zero and go one digit to the\r\n  // left, and begin again until you're able to increment a digit\r\n  // without cycling it...simple, huh...?\r\n\r\n  for( let i_odometer_digit = odometer.length-1; i_odometer_digit >=0; i_odometer_digit-- ){ \r\n\r\n      let maxee = arrayOfArrays[i_odometer_digit].length - 1;         \r\n\r\n      if( odometer[i_odometer_digit] + 1 <= maxee ){\r\n          // increment, and you're done...\r\n          odometer[i_odometer_digit]++;\r\n          return true;\r\n      }\r\n      else{\r\n          if( i_odometer_digit - 1 < 0 ){\r\n              // No more digits left to increment, end of the line...\r\n              return false;\r\n          }\r\n          else{\r\n              // Can't increment this digit, cycle it to zero and continue\r\n              // the loop to go over to the next digit...\r\n              odometer[i_odometer_digit]=0;\r\n              continue;\r\n          }\r\n      }\r\n  }/* for( let odometer_digit = odometer.length-1; odometer_digit >=0; odometer_digit-- ) */\r\n\r\n}/* odometerIncrement() */\r\n","import React, { useState } from \"react\";\r\nimport { combineArrays } from \"./ArrayMethods\";\r\nimport dollData from \"./DollDataLight.json\";\r\n\r\nconst DollMaker = () => {\r\n  const [hair, setHair] = useState<string>(\"no hair\");\r\n  const [face, setFace] = useState<string>(\"no face\");\r\n  const [body, setBody] = useState<string>(\"no body\");\r\n  const [leftArm, setLeftArm] = useState<string>(\"no left arm\");\r\n  const [rightArm, setRightArm] = useState<string>(\"no right arm\");\r\n  const [leftLeg, setLeftLeg] = useState<string>(\"no left leg\");\r\n  const [rightLeg, setRightLeg] = useState<string>(\"no right leg\");\r\n\r\n  const getBodyPart = (bodyPart: string[]) => {\r\n    const options: JSX.Element[] = [<option hidden>select</option>];\r\n    bodyPart.forEach((part) => {\r\n      options.push(<option value={part}>{part}</option>);\r\n    });\r\n    return options;\r\n  };\r\n\r\n  const makeBody = () => {\r\n    return `${hair} ${face} ${body} ${leftArm} ${rightArm} ${leftLeg} ${rightLeg}`;\r\n  };\r\n\r\n  const makeRows = () => {\r\n    const arrayOfArrays = [\r\n      dollData.hairs,\r\n      dollData.faces,\r\n      dollData.bodies,\r\n      dollData.left_arms,\r\n      dollData.right_arms,\r\n      dollData.left_legs,\r\n      dollData.right_legs,\r\n    ];\r\n    const allCombinations = combineArrays(arrayOfArrays);\r\n    console.log(\"All combinations: \", allCombinations.length);\r\n    const onlySomeArrays = allCombinations.slice(10);\r\n\r\n    return onlySomeArrays.map((combination, index) => {\r\n      const comboArray = combination.split(\",\");\r\n      comboArray.pop();\r\n      return (\r\n        <tr>\r\n          <td>{index + 1}</td>\r\n          <td>Image</td>\r\n          <td>{comboArray}</td>\r\n        </tr>\r\n      );\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"top\">\r\n        <div className=\"label-set\">\r\n          <label htmlFor=\"hair\">Hair</label>\r\n          <select name=\"\" id=\"hair\" onChange={(e) => setHair(e.target.value)}>\r\n            {getBodyPart(dollData.hairs)}\r\n          </select>\r\n        </div>\r\n        <div className=\"label-set\">\r\n          <label htmlFor=\"face\">Face</label>\r\n          <select name=\"\" id=\"face\" onChange={(e) => setFace(e.target.value)}>\r\n            {getBodyPart(dollData.faces)}\r\n          </select>\r\n        </div>\r\n        <div className=\"label-set\">\r\n          <label htmlFor=\"body\">Body</label>\r\n          <select name=\"\" id=\"body\" onChange={(e) => setBody(e.target.value)}>\r\n            {getBodyPart(dollData.bodies)}\r\n          </select>\r\n        </div>\r\n        <div className=\"label-set\">\r\n          <label htmlFor=\"left_arm\">Left Arm</label>\r\n          <select\r\n            name=\"\"\r\n            id=\"left_arm\"\r\n            onChange={(e) => setLeftArm(e.target.value)}\r\n          >\r\n            {getBodyPart(dollData.left_arms)}\r\n          </select>\r\n        </div>\r\n        <div className=\"label-set\">\r\n          <label htmlFor=\"right_arm\">Right Arm</label>\r\n          <select\r\n            name=\"\"\r\n            id=\"right_arm\"\r\n            onChange={(e) => setRightArm(e.target.value)}\r\n          >\r\n            {getBodyPart(dollData.right_arms)}\r\n          </select>\r\n        </div>\r\n        <div className=\"label-set\">\r\n          <label htmlFor=\"left_leg\">Left Leg</label>\r\n          <select\r\n            name=\"\"\r\n            id=\"left_leg\"\r\n            onChange={(e) => setLeftLeg(e.target.value)}\r\n          >\r\n            {getBodyPart(dollData.left_legs)}\r\n          </select>\r\n        </div>\r\n        <div className=\"label-set\">\r\n          <label htmlFor=\"right_leg\">Right Leg</label>\r\n          <select\r\n            name=\"\"\r\n            id=\"right_leg\"\r\n            onChange={(e) => setRightLeg(e.target.value)}\r\n          >\r\n            {getBodyPart(dollData.right_legs)}\r\n          </select>\r\n        </div>\r\n      </div>\r\n      <div className=\"bottom\">\r\n        <label htmlFor=\"result\">Result</label>\r\n        <textarea value={makeBody()} rows={5} />\r\n      </div>\r\n      {/* <div className=\"table-top\">\r\n        <div className=\"label-set\">\r\n          <label htmlFor=\"results\">Results</label>\r\n          <select\r\n            name=\"\"\r\n            id=\"results\"\r\n            onChange={(e) => setRightLeg(e.target.value)}\r\n          >\r\n            {getBodyPart(dollData.right_legs)}\r\n          </select>\r\n        </div>\r\n      </div> */}\r\n      <table>\r\n        <thead>\r\n          <tr>\r\n            <th>#</th>\r\n            <th>Broken Doll</th>\r\n            <th>Parts Used</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>{makeRows()}</tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DollMaker;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React, { useState } from \"react\";\r\nimport storyData from \"./StoryData.json\";\r\nimport namingData from \"./NamingData.json\";\r\nimport creatures from \"./GauntletData/Creatures.json\";\r\nimport deity from \"./GauntletData/Deity.json\";\r\nimport planes from \"./GauntletData/Planes.json\";\r\nimport tribes from \"./GauntletData/Tribes.json\";\r\n\r\nconst gauntletData = creatures.gauntlets.concat(\r\n  deity.gauntlets,\r\n  planes.gauntlets,\r\n  tribes.gauntlets\r\n);\r\n\r\nconst StoryMaker = () => {\r\n  const [rarity, setRarity] = useState<string>(\"no rarity\");\r\n  const [element, setElement] = useState<string>(\"no element\");\r\n  const [attack, setAttack] = useState<string>(\"no attack\");\r\n\r\n  const getRarities = () => {\r\n    const options: JSX.Element[] = [<option hidden>select</option>];\r\n    storyData.rarity.forEach((rarity) => {\r\n      options.push(<option value={rarity.content}>{rarity.name}</option>);\r\n    });\r\n    return options;\r\n  };\r\n\r\n  const getElements = () => {\r\n    const options: JSX.Element[] = [<option hidden>select</option>];\r\n    storyData.element.forEach((element) => {\r\n      options.push(<option value={element.content}>{element.name}</option>);\r\n    });\r\n    return options;\r\n  };\r\n\r\n  const getAttacks = () => {\r\n    const options: JSX.Element[] = [<option hidden>select</option>];\r\n    storyData.attack.forEach((attack) => {\r\n      options.push(<option value={attack.content}>{attack.name}</option>);\r\n    });\r\n    return options;\r\n  };\r\n\r\n  const makeStory = () => {\r\n    return `${rarity} ${attack} ${element}`;\r\n  };\r\n\r\n  const capitalizeFirstLetter = (name: string) => {\r\n    return name.charAt(0).toUpperCase() + name.slice(1);\r\n  };\r\n\r\n  const makeName = (rarity: string, element: string, attack: string) => {\r\n    const start = namingData.rarity.filter(\r\n      (_rarity) => _rarity.name === rarity\r\n    )[0].name;\r\n    const middle = namingData.element.filter(\r\n      (_element) => _element.name === element\r\n    )[0].content;\r\n    const end = namingData.attack.filter(\r\n      (_attack) => _attack.name === attack\r\n    )[0].content;\r\n\r\n    return `${capitalizeFirstLetter(start)}'s ${middle} ${end}`;\r\n  };\r\n\r\n  const getFirstLetter = (word: string) => {\r\n    return word.charAt(0).toUpperCase() + word.charAt(1);\r\n  };\r\n\r\n  const makeID = (rarity: string, element: string, attack: string) => {\r\n    const start = namingData.rarity.filter(\r\n      (_rarity) => _rarity.name === rarity\r\n    )[0].name;\r\n    const middle = namingData.element.filter(\r\n      (_element) => _element.name === element\r\n    )[0].content;\r\n    const end = namingData.attack.filter(\r\n      (_attack) => _attack.name === attack\r\n    )[0].content;\r\n\r\n    return `${getFirstLetter(start)}_${getFirstLetter(middle)}_${getFirstLetter(\r\n      end\r\n    )}`;\r\n  };\r\n\r\n  const makeStoryCell = (rarity: string, element: string, attack: string) => {\r\n    const start = storyData.rarity.filter(\r\n      (_rarity) => _rarity.name === rarity\r\n    )[0].content;\r\n    const middle = storyData.attack.filter(\r\n      (_attack) => _attack.name === attack\r\n    )[0].content;\r\n    const end = storyData.element.filter(\r\n      (_element) => _element.name === element\r\n    )[0].content;\r\n\r\n    return `${start} ${middle} ${end}`;\r\n  };\r\n\r\n  const makeRows = () => {\r\n    return gauntletData.map((gauntlet, index) => {\r\n      return (\r\n        <tr>\r\n          <td>{index + 1}</td>\r\n          <td>\r\n            {makeName(gauntlet.rarity, gauntlet.element, gauntlet.attack)}\r\n          </td>\r\n          <td>{gauntlet.rarity}</td>\r\n          <td>{gauntlet.element}</td>\r\n          <td>{gauntlet.attack}</td>\r\n          <td>\r\n            {makeStoryCell(gauntlet.rarity, gauntlet.element, gauntlet.attack)}\r\n          </td>\r\n          <td>{makeID(gauntlet.rarity, gauntlet.element, gauntlet.attack)}</td>\r\n        </tr>\r\n      );\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"top\">\r\n        <div>\r\n          <label htmlFor=\"rarity\">Rarity</label>\r\n          <select\r\n            name=\"\"\r\n            id=\"rarity\"\r\n            onChange={(e) => setRarity(e.target.value)}\r\n          >\r\n            {getRarities()}\r\n          </select>\r\n        </div>\r\n        <div>\r\n          <label htmlFor=\"attack\">Attack</label>\r\n          <select\r\n            name=\"\"\r\n            id=\"attack\"\r\n            onChange={(e) => setAttack(e.target.value)}\r\n          >\r\n            {getAttacks()}\r\n          </select>\r\n        </div>\r\n        <div>\r\n          <label htmlFor=\"element\">Element</label>\r\n          <select\r\n            name=\"\"\r\n            id=\"element\"\r\n            onChange={(e) => setElement(e.target.value)}\r\n          >\r\n            {getElements()}\r\n          </select>\r\n        </div>\r\n      </div>\r\n      <div className=\"bottom\">\r\n        <label htmlFor=\"result\">Result</label>\r\n        <textarea value={makeStory()} rows={5} />\r\n      </div>\r\n\r\n      <table>\r\n        <thead>\r\n          <tr>\r\n            <th>#</th>\r\n            <th>Name</th>\r\n            <th>Rarity</th>\r\n            <th>Element</th>\r\n            <th>Attack</th>\r\n            <th>Story</th>\r\n            <th>ID</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>{makeRows()}</tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StoryMaker;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport DollMaker from \"./DollMaker/DollMaker\";\r\nimport \"./index.css\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nimport StoryMaker from \"./StoryMaker/StoryMaker\";\r\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Router>\r\n      <div className=\"container\">\r\n        <div className=\"top\">\r\n          <Link to=\"/story\">Story Maker</Link>\r\n          <Link to=\"/doll\">Doll Maker</Link>\r\n        </div>\r\n      </div>\r\n      <Route exact path=\"/story\">\r\n        <StoryMaker />\r\n      </Route>\r\n      <Route exact path=\"/doll\">\r\n        <DollMaker />\r\n      </Route>\r\n    </Router>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}